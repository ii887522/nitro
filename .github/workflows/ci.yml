name: CI

on:
  push:
    branches: [master, develop]
  pull_request:
    branches: [master, develop]

env:
  python-version: '3.7'
  node-version: '14.x'

jobs:
  lint:
    runs-on: windows-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.node-version }}
      - name: Get npm cache directory
        id: npm-cache
        run: echo "::set-output name=dir::$(npm config get cache)"
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v2
        with:
          path: |
            ~\AppData\Local\pip\Cache
            env
            ${{ steps.npm-cache.outputs.dir }}
            libs
          key: ${{ runner.os }}-pip-node-virtualenv-cpplint-${{ hashFiles('**/package-lock.json', 'build.js') }}
          restore-keys: |
            ${{ runner.os }}-pip-node-
            ${{ runner.os }}-
      - name: Use Python
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.python-version }}
      - name: Install virtualenv
        if: steps.cache.outputs.cache-hit != 'true'
        run: python -m pip install virtualenv
      - name: Create a virtual environment
        if: steps.cache.outputs.cache-hit != 'true'
        run: virtualenv env
      - name: Install cpplint
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          env\Scripts\activate
          python -m pip install cpplint
          env\Scripts\deactivate
      - name: Install dependencies
        run: npm ci
      - name: Lint project
        run: |
          env\Scripts\activate
          cpplint --recursive --linelength=256 nitro\src\
          env\Scripts\deactivate
  build-test-app:
    runs-on: windows-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.node-version }}
      - name: Get npm cache directory
        id: npm-cache
        run: echo "::set-output name=dir::$(npm config get cache)"
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~\AppData\Local\pip\Cache
            env
            ${{ steps.npm-cache.outputs.dir }}
            libs
          key: ${{ runner.os }}-pip-node-virtualenv-cpplint-${{ hashFiles('**/package-lock.json', 'build.js') }}
          restore-keys: |
            ${{ runner.os }}-pip-node-
            ${{ runner.os }}-
      - name: Cache outputs
        id: outputs-cache
        uses: actions/cache@v2
        with:
          path: |
            nitro\Test
            nitro\x64\Test
          key: ${{ runner.os }}-cpp-${{ hashFiles('nitro\res\**\*', 'nitro\src\**\*') }}
      - name: Use MSBuild
        if: steps.outputs-cache.outputs.cache-hit != 'true'
        uses: microsoft/setup-msbuild@v1.0.2
      - if: steps.outputs-cache.outputs.cache-hit != 'true'
        run: msbuild nitro\nitro.sln /p:Configuration=Test /p:Platform=x86
      - if: steps.outputs-cache.outputs.cache-hit != 'true'
        run: msbuild nitro\nitro.sln /p:Configuration=Test /p:Platform=x64
    needs: lint
  test:
    runs-on: windows-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
      - name: Cache outputs
        uses: actions/cache@v2
        with:
          path: |
            nitro\Test
            nitro\x64\Test
          key: ${{ runner.os }}-cpp-${{ hashFiles('nitro\res\**\*', 'nitro\src\**\*') }}
      - name: Test x86
        run: |
          cd nitro
          Test\nitro
          cd ..
      - name: Test x64
        run: |
          cd nitro
          x64\Test\nitro
          cd ..
    needs: build-test-app
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~\AppData\Local\pip\Cache
            env
            ${{ steps.npm-cache.outputs.dir }}
            libs
          key: ${{ runner.os }}-pip-node-virtualenv-cpplint-${{ hashFiles('**/package-lock.json', 'build.js') }}
          restore-keys: |
            ${{ runner.os }}-pip-node-
            ${{ runner.os }}-
      - name: Cache outputs
        id: outputs-cache
        uses: actions/cache@v2
        with:
          path: |
            **\Debug
            **\Release
          key: ${{ runner.os }}-cpp-${{ hashFiles('nitro\res\**\*', 'nitro\src\**\*') }}
      - name: Use MSBuild
        if: steps.outputs-cache.outputs.cache-hit != 'true'
        uses: microsoft/setup-msbuild@v1.0.2
      - if: steps.outputs-cache.outputs.cache-hit != 'true'
        run: msbuild nitro\nitro.sln /p:Configuration=Debug /p:Platform=x86
      - if: steps.outputs-cache.outputs.cache-hit != 'true'
        run: msbuild nitro\nitro.sln /p:Configuration=Debug /p:Platform=x64
      - if: steps.outputs-cache.outputs.cache-hit != 'true'
        run: msbuild nitro\nitro.sln /p:Configuration=Release /p:Platform=x86
      - if: steps.outputs-cache.outputs.cache-hit != 'true'
        run: msbuild nitro\nitro.sln /p:Configuration=Release /p:Platform=x64
    needs: lint
  deploy:
    if: github.base_ref == 'master'
    runs-on: windows-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.node-version }}
      - name: Get npm cache directory
        id: npm-cache
        run: echo "::set-output name=dir::$(npm config get cache)"
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~\AppData\Local\pip\Cache
            env
            ${{ steps.npm-cache.outputs.dir }}
            libs
          key: ${{ runner.os }}-pip-node-virtualenv-cpplint-${{ hashFiles('**/package-lock.json', 'build.js') }}
          restore-keys: |
            ${{ runner.os }}-pip-node-
            ${{ runner.os }}-
      - name: Cache outputs
        uses: actions/cache@v2
        with:
          path: |
            **\Debug
            **\Release
          key: ${{ runner.os }}-cpp-${{ hashFiles('nitro\res\**\*', 'nitro\src\**\*') }}
      - name: Install dependencies
        run: npm ci
      - run: node deploy.js 1.3.0 ${{ secrets.DEPLOY_TOKEN }}
    needs: [test, build]
